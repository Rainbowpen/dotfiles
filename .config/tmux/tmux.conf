


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'catppuccin/tmux#latest'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
#set -g @plugin 'dracula/tmux'
#set -g @plugin 'arcticicestudio/nord-tmux'

#catppuccin settings
set -g @catppuccin_flavor 'macchiato' # latte,frappe, macchiato or mocha
set -g @catppuccin_status_background "theme"
set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator "█ "
set -g @catppuccin_window_number_position "left"
#set -g @catppuccin_window_default_text "#{b:pane_current_path}" # use "#W" for application instead of directory
#set -g @catppuccin_window_current_text "#{b:pane_current_path}" # use "#W" for application instead of directory
####

# enable auto restore sessions
set -g @continuum-boot 'on'
set -g @continuum-restore 'on'
set -g @resurrect-processes 'ssh psql mysql sqlite3 btop cmatrix gping'

# Config that is very close to a i3 window manager's keybinding.
set -s escape-time 0
setw -g aggressive-resize on

# First remove *all* keybindings
#unbind-key -a

# List keys
bind-key ? list-keys

# Copy mode
bind-key [ copy-mode

# Paste buffer
bind-key ] paste-buffer

# Refresh client
bind-key r refresh-client \; display-message "Refresh already"

# Switch to last client
bind-key tab switch-client -l

# Start with index 1
set -g base-index 1
setw -g pane-base-index 1

# Set new prefix
set -g prefix M-w
bind-key Space send-prefix

# Clock
setw -g clock-mode-style 24

# Config Reloads
bind R source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded"

# 滑鼠滾動視窗
set -g mouse on

# Split window
bind-key H split-window -h
bind-key V split-window -v

# Rotate Window
bind-key -n M-o rotate-window

# Switch to previous window
bind-key -n M-tab last-window

# Swap pane
bind-key -r J swap-pane -D
bind-key -r K swap-pane -U


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n M-j if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n M-k if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n M-l if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
bind-key -n "M-\;" if-shell "$is_vim" 'send-keys "M-\;"'  'select-pane -l'

#bind-key -T copy-mode-vi C-h select-pane -L
#bind-key -T copy-mode-vi C-j select-pane -D
#bind-key -T copy-mode-vi C-k select-pane -U
#bind-key -T copy-mode-vi C-l select-pane -R
#bind-key -T copy-mode-vi C-\ select-pane -l

# Resize pane with Alt (prefix with repeat)
bind-key -r h resize-pane -L 5 \; display-message "Resize left"
bind-key -r j resize-pane -D 5 \; display-message "Resize down"
bind-key -r k resize-pane -U 5 \; display-message "Resize up"
bind-key -r l resize-pane -R 5 \; display-message "Resize right"

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Choose Window
bind-key w choose-window

# New Window with number
bind-key 1 new-window -t 1
bind-key 2 new-window -t 2
bind-key 3 new-window -t 3
bind-key 4 new-window -t 4
bind-key 5 new-window -t 5
bind-key 6 new-window -t 6
bind-key 7 new-window -t 7
bind-key 8 new-window -t 8
bind-key 9 new-window -t 9
bind-key 0 new-window -t 10

# Switch windows alt+number
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
bind-key -n M-0 select-window -t 10

# Change current pane to next window
bind-key ! join-pane -t :1
bind-key @ join-pane -t :2
bind-key '#' join-pane -t :3
bind-key '$' join-pane -t :4
bind-key '%' join-pane -t :5
bind-key '^' join-pane -t :6
bind-key '&' join-pane -t :7
bind-key '*' join-pane -t :8
bind-key '(' join-pane -t :9
bind-key ')' join-pane -t :10

# Kill Selected Pane
bind-key Q kill-pane

# detach
bind-key -n M-d detach

## Use vim keybindings in copy mode
#### https://www.rockyourcode.com/copy-and-paste-in-tmux/
set-option -g mouse on
setw -g mode-keys vi
set-option -s set-clipboard on
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X rectangle-toggle
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -se c -i'
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -se c -i'



#Toggleable terminal
# for splits
bind-key -n C-\\ run-shell -b "${HOME}/.local/bin/scripts/tmux-toggle-term.sh"
#bind-key -n M-\\ run-shell -b "${HOME}/.local/bin/scripts/tmux-toggle-term.sh float"

# # Quickly toggle a scratch session in a popup window
# bind-key -n -N 'Toggle scratch session in a popup window' C-\\ if -F '#{==:#{session_name},scratch}' {
#     detach-client
# } {
#     display-popup -d "#{pane_current_path}" -xC -yC -w 80% -h 75% -E 'tmux new-session -A -s scratch -c "#{pane_current_path}"'
# }
#
#
#
# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
